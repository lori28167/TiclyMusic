name: Graphical App CI/CD with Tailscale Potential

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Adding a manual trigger for easy testing
  workflow_dispatch:

jobs:
  my_job:
    # Use Ubuntu for the runner
    runs-on: ubuntu-latest

    steps:
      - name: 1. Checkout repository code
        uses: actions/checkout@v4

      # Best practice: explicitly set up Python environment
      - name: 2. Set up Python 3.14
        uses: actions/setup-python@v5
        with:
          python-version: '3.14'

      # --- Headless Graphical Environment Setup ---
      
      - name: 3. Install Graphical Dependencies (Xvfb, GNOME, VLC)
        run: |
          sudo apt-get update
          # xvfb is critical for the virtual display
          # gnome-shell and gnome-terminal are installed but often not strictly necessary 
          # unless your Python app relies on specific GNOME libs.
          sudo apt-get install -y xvfb gnome-shell gnome-terminal vlc libglib2.0-0 libfontconfig1

      - name: 4. Start Virtual Display Server (Xvfb)
        id: start_xvfb
        run: |
          # Start Xvfb on display :99 in the background
          Xvfb :99 -ac -screen 0 1280x1024x24 &
          
          # CRITICAL FIX: Export the DISPLAY variable to the next steps using GITHUB_ENV
          echo "DISPLAY=:99" >> $GITHUB_ENV
          echo "Xvfb started on display :99"
          
      - name: 5. Install Python requirements
        run: |
          # Install dependencies using pip
          pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: 6. Run Graphical App/Test
        # The DISPLAY environment variable is now available in this step
        run: |
          echo "Starting the Python application (main.py) on virtual display ${DISPLAY}"
          python3 main.py

      # --- Tailscale Integration (Optional, but planned for your full workflow) ---
      
      # If you need to access private network resources for your test/deployment:
      # - name: 7. Connect to Tailnet
      #   uses: tailscale/github-action@v4
      #   with:
      #     oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
      #     oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
      #     tags: tag:ci-runner
          
      # - name: 8. Secure Deployment Step
      #   run: |
      #     echo "Now deploying using Tailscale SSH or accessing private database..."
